<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc
                       http://www.springframework.org/schema/mvc/spring-mvc.xsd
                   http://www.springframework.org/schema/beans
                   http://www.springframework.org/schema/beans/spring-beans.xsd
                   http://www.springframework.org/schema/context
                   http://www.springframework.org/schema/context/spring-context.xsd
                   http://www.springframework.org/schema/task
                   http://www.springframework.org/schema/task/spring-task.xsd
                   ">
    <bean id="helloJob" class="com.spring.jobs.SpringHelloJob" />

    <!-- quartz和spring整合的方式之一，无法充分使用quartz框架的功能 -->
    <!--<bean id="helloJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">-->
        <!--<property name="targetObject" ref="helloJob" />-->
        <!--<property name="targetMethod" value="execute" />-->
        <!--<property name="concurrent" value="false" />-->
    <!--</bean>-->

    <!-- quartz和spring整合的方式之二 -->
    <bean name="helloJobDetail" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
        <property name="name" value="job1" />
        <property name="group" value="group1" />
        <property name="jobClass" value="com.spring.jobs.SpringQuartzJob" />
        <property name="durability" value="true" />
        <property name="jobDataAsMap">
            <map><entry key="param" value="1" /></map>
        </property>
    </bean>

    <bean id="helloJobTrigger"  class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="helloJobDetail" />
        <property name="cronExpression" value="0/5 * * * * ?" />
    </bean>

    <bean id="helloJobSimpleTrigger"  class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
        <property name="jobDetail" ref="helloJobDetail" />
        <property name="startDelay" value="500" />
        <property name="repeatInterval" value="0" />
        <property name="repeatCount" value="0" />
    </bean>

    <!--tomcat下可能会有重复运行两次作业的现象，网上说有两种解决方案：-->
    <!--1.改tomcat配置文件autoDeploy="false" deployOnStartup="false" 这样的话，在tomcat启动时，不会自动发布appBase下的应用，启动后也不会自动发步appBase下的应用-->
    <!--2.只在DispatcherServlet的init-param中配置spring-quartz.xml，不在spring的contextConfigLocation中配置-->
    <!--但是，这次是深度集成spring和quartz，要在service层中同时操作quartz和普通dao，并用事务捆绑两者同时成功或失败-->
    <!--所以第二种方案无法正常运行，可考虑第一种方案-->
    <!--<Host name="localhost"  appBase="webapps"-->
          <!--unpackWARs="true" autoDeploy="false" deployOnStartup="false">-->
        <!--<Context path="" docBase="/eugeneqiu_test" debug="0" reloadable="true"/>-->
    <!--</Host>-->
    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="triggers">
            <list>
                <!--<ref bean="helloJobTrigger" />-->
                <!--<ref bean="helloJobSimpleTrigger" />-->
            </list>
        </property>
        <property name="applicationContextSchedulerContextKey" value="applicationContextKey"/>
        <property name="configLocation" value="classpath:quartz2.properties"/>
    </bean>

</beans>
